#!/usr/bin/env coffee

util = require 'util'
nomnom = require 'nomnom'
clc = require 'cli-color'
logparty = require '../lib/logparty'
parseRequest = require('../lib/request_parser').parse

nomnom.option 'limit',
  abbr: 'l'
  help: 'limit body output to N lines'
  
options = nomnom.parse()

process.stdin.resume()
process.stdin.setEncoding('utf8')

buffer = ''

showRequest = (request) ->
  console.log "========================================="
  console.log "#{clc.green('Server:')} #{request.server}"
  console.log clc.green('Headers:')

  showRequestHeaders(request.headers)
  showRequestBody(request.body)

showRequestHeaders = (headers) ->
  if headers?
    headers.forEach (header) ->
      header = header.replace /^([^:]+):/, (match, name) -> clc.blue(name) + ":"
      console.log "  - #{header}" if header.length > 0

showRequestBody = (body) ->
  console.log clc.green('Body:')
  limited = false

  unless typeof(body) is 'string'
    body = util.inspect(body, colors: true)

  lines = body.split("\n")
  if options.limit? and lines.length > options.limit
    lines = lines.slice(0, options.limit)
    lines.push clc.red("(there's more...)")
    body = lines.join("\n")

  console.log body

process.stdin.on 'data', (chunk) ->
  chunk = buffer + chunk.toString()
  buffer = ''
  result = logparty.parseChunk(chunk)
  result.requests.forEach (rawRequest) ->
    request = parseRequest(rawRequest)
    showRequest(request)

  if result.after? and result.after.length > 0
    buffer = result.after

